a:3:{s:2:"id";s:5:"33552";s:4:"name";s:16:"Zend Framework 2";s:6:"phases";a:6:{i:0;a:2:{s:5:"phase";s:7:"Backlog";s:7:"stories";a:1:{i:0;a:10:{s:4:"text";s:5:"Forms";s:7:"details";s:0:"";s:2:"id";i:12;s:8:"assignee";s:23:"Matthew Weier O'Phinney";s:5:"tasks";a:0:{}s:8:"totTasks";i:0;s:14:"completedTasks";i:0;s:9:"rateTasks";i:0;s:8:"comments";a:0:{}s:4:"tags";a:3:{i:0;s:3:"mvc";i:1;s:10:"2.0.0beta4";i:2;s:4:"form";}}}}i:1;a:2:{s:5:"phase";s:3:"RFC";s:7:"stories";a:1:{i:0;a:10:{s:4:"text";s:7:"Console";s:7:"details";s:248:"Console tooling for ZF2. Robert Basic spearheaded the initial proposal here:

* http://framework.zend.com/wiki/display/ZFDEV2/RFC+-+CLI

However, it is not yet approved, and Artur Bodera has some ideas on how to improve and implement that proposal.";s:2:"id";i:2;s:8:"assignee";s:0:"";s:5:"tasks";a:1:{i:0;a:3:{s:4:"text";s:12:"Complete RFC";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-01-13T15:56:43";}}s:8:"totTasks";i:1;s:14:"completedTasks";i:0;s:9:"rateTasks";d:0;s:8:"comments";a:0:{}s:4:"tags";a:3:{i:0;s:3:"mvc";i:1;s:3:"cli";i:2;s:10:"2.0.0beta3";}}}}i:2;a:2:{s:5:"phase";s:5:"Ready";s:7:"stories";a:5:{i:0;a:10:{s:4:"text";s:3:"Log";s:7:"details";s:173:"Refactor of Zend\Log; RFC is here:

* http://framework.zend.com/wiki/display/ZFDEV2/RFC+-+Log+refactoring

Benoit was around 80% complete by beta2; unsure what tasks remain.";s:2:"id";i:4;s:8:"assignee";s:0:"";s:5:"tasks";a:0:{}s:8:"totTasks";i:0;s:14:"completedTasks";i:0;s:9:"rateTasks";i:0;s:8:"comments";a:0:{}s:4:"tags";a:2:{i:0;s:3:"log";i:1;s:10:"2.0.0beta3";}}i:1;a:10:{s:4:"text";s:61:"Add license files and docblocks to skeleton and Zend* modules";s:7:"details";s:0:"";s:2:"id";i:14;s:8:"assignee";s:10:"Evan Coury";s:5:"tasks";a:3:{i:0;a:3:{s:4:"text";s:23:"ZendSkeletonApplication";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-11T00:00:03";}i:1;a:3:{s:4:"text";s:18:"ZendDeveloperTools";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-11T00:00:03";}i:2;a:3:{s:4:"text";s:18:"ZendSkeletonModule";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-11T00:00:03";}}s:8:"totTasks";i:3;s:14:"completedTasks";i:0;s:9:"rateTasks";d:0;s:8:"comments";a:0:{}s:4:"tags";a:1:{i:0;s:10:"2.0.0beta4";}}i:2;a:10:{s:4:"text";s:36:"Module: add docblocks in Zend\Module";s:7:"details";s:0:"";s:2:"id";i:15;s:8:"assignee";s:10:"Evan Coury";s:5:"tasks";a:1:{i:0;a:3:{s:4:"text";s:13:"Add docblocks";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-11T00:05:28";}}s:8:"totTasks";i:1;s:14:"completedTasks";i:0;s:9:"rateTasks";d:0;s:8:"comments";a:0:{}s:4:"tags";a:2:{i:0;s:10:"2.0.0beta4";i:1;s:6:"module";}}i:3;a:10:{s:4:"text";s:37:"Module: Refactor event listener names";s:7:"details";s:294:"It was raised by Rob Allen that method names that match the event name (what we currently have in Zend\Module at least) does not properly describe what the method does. It was suggested that instead of 'loadModule()' we would name a listener method something like 'onLoadModule()' or something.";s:2:"id";i:16;s:8:"assignee";s:10:"Evan Coury";s:5:"tasks";a:1:{i:0;a:3:{s:4:"text";s:28:"Change listener method names";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-11T16:47:42";}}s:8:"totTasks";i:1;s:14:"completedTasks";i:0;s:9:"rateTasks";d:0;s:8:"comments";a:0:{}s:4:"tags";a:2:{i:0;s:10:"2.0.0beta3";i:1;s:6:"module";}}i:4;a:10:{s:4:"text";s:22:"Add components to Jira";s:7:"details";s:0:"";s:2:"id";i:17;s:8:"assignee";s:23:"Matthew Weier O'Phinney";s:5:"tasks";a:3:{i:0;a:3:{s:4:"text";s:23:"Add Zend\Module to jira";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-13T08:09:37";}i:1;a:3:{s:4:"text";s:20:"Add Zend\Mvc to jira";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-13T08:09:37";}i:2;a:3:{s:4:"text";s:40:"Add any other missing components to jira";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-13T08:09:37";}}s:8:"totTasks";i:3;s:14:"completedTasks";i:0;s:9:"rateTasks";d:0;s:8:"comments";a:0:{}s:4:"tags";a:3:{i:0;s:7:"website";i:1;s:4:"jira";i:2;s:10:"confluence";}}}}i:3;a:2:{s:5:"phase";s:7:"Working";s:7:"stories";a:4:{i:0;a:10:{s:4:"text";s:10:"View Layer";s:7:"details";s:251:"Proposed layer above view rendering to coordinate contextual rendering and response population.

RFC is at: http://framework.zend.com/wiki/display/ZFDEV2/RFC+-+View+Layer

Prototypes are at: https://github.com/weierophinney/zf2/tree/feature/view-layer";s:2:"id";i:1;s:8:"assignee";s:23:"Matthew Weier O'Phinney";s:5:"tasks";a:32:{i:0;a:3:{s:4:"text";s:10:"Create RFC";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-13T15:47:36";}i:1;a:3:{s:4:"text";s:39:"Collect and incorporate feedback on RFC";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-13T15:47:52";}i:2;a:3:{s:4:"text";s:21:"Prototype: interfaces";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-13T15:48:12";}i:3;a:3:{s:4:"text";s:20:"Prototype: ViewEvent";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-13T15:48:49";}i:4;a:3:{s:4:"text";s:15:"Prototype: View";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-13T15:48:52";}i:5;a:3:{s:4:"text";s:20:"Prototype: Resolvers";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-13T15:49:04";}i:6;a:3:{s:4:"text";s:23:"Prototype: JsonRenderer";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-13T15:49:15";}i:7;a:3:{s:4:"text";s:46:"Prototype: resolver integration in PhpRenderer";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-13T15:49:27";}i:8;a:3:{s:4:"text";s:50:"Prototype: extends() functionality for PhpRenderer";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-13T15:49:41";}i:9;a:3:{s:4:"text";s:48:"Prototype: ViewModel integration for PhpRenderer";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-13T15:49:50";}i:10;a:3:{s:4:"text";s:37:"Prototype: Default rendering strategy";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-13T15:50:10";}i:11;a:3:{s:4:"text";s:72:"Prototype: concrete ViewModels (ViewModel, JsonViewModel, FeedViewModel)";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-13T15:50:35";}i:12;a:3:{s:4:"text";s:23:"Prototype: FeedRenderer";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-13T15:50:53";}i:13;a:3:{s:4:"text";s:35:"End-User Documentation: Quick Start";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-01-13T15:51:11";}i:14;a:3:{s:4:"text";s:32:"End-User Documentation: Examples";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-01-13T15:51:23";}i:15;a:3:{s:4:"text";s:43:"End-User Documentation: Options and Methods";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-01-13T15:51:36";}i:16;a:3:{s:4:"text";s:40:"Add "render" event to Application::run()";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-02T15:04:26";}i:17;a:3:{s:4:"text";s:29:"Test ViewModel implementation";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-03T15:13:09";}i:18;a:3:{s:4:"text";s:24:"Test TemplateMapResolver";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-03T15:13:19";}i:19;a:3:{s:4:"text";s:14:"Test ViewEvent";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-03T15:13:30";}i:20;a:3:{s:4:"text";s:29:"Test DefaultRenderingStrategy";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-03T15:13:38";}i:21;a:3:{s:4:"text";s:107:"Alter "route" and "dispatch" events to inject ViewModel responses into a "layout" or "aggregate" view model";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-08T14:28:56";}i:22;a:3:{s:4:"text";s:114:"Create convenience models with default renderer options (e.g., enable_layout => true, capture_to => content, etc.)";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-08T14:30:10";}i:23;a:3:{s:4:"text";s:70:"Refactor DefaultRenderingStrategy to push options into separate object";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-08T14:30:51";}i:24;a:3:{s:4:"text";s:95:"Add DefaultRenderingStrategy options for error pages, placeholder buckets (if still used), etc.";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-08T14:31:10";}i:25;a:3:{s:4:"text";s:46:"Rename PhpRenderer::enqueue() to addTemplate()";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-08T14:31:22";}i:26;a:3:{s:4:"text";s:45:"Rename PhpRenderer::$extensions to $templates";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-08T14:31:38";}i:27;a:3:{s:4:"text";s:114:"Create Response Strategy for adding Vary header when different content is allowed for a given page. (Vary: Accept)";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-08T14:32:14";}i:28;a:3:{s:4:"text";s:69:"Add "level" support to Accept header; should help vary on media types";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-08T14:32:32";}i:29;a:3:{s:4:"text";s:39:"Add wildcard support to Accept handling";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-08T14:32:47";}i:30;a:3:{s:4:"text";s:82:"Implement a solution for view "configuration" (e.g., API keys, head content, etc.)";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-08T14:33:26";}i:31;a:3:{s:4:"text";s:36:"Add AggregateResolver implementation";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-12T20:59:34";}}s:8:"totTasks";i:32;s:14:"completedTasks";i:24;s:9:"rateTasks";d:75;s:8:"comments";a:2:{i:0;a:2:{s:4:"text";s:163:"The view prototype is basically complete at this time. I'm working on incorporating it into my sandbox in order to show examples to users for discussions purposes.";s:6:"author";s:23:"Matthew Weier O'Phinney";}i:1;a:2:{s:4:"text";s:186:"Added the feature/view-layer branch to my ZF2 repo clone; it incorporates all code changes and additions from my zf2sandbox, and will be where feature development continues at this time.";s:6:"author";s:23:"Matthew Weier O'Phinney";}}s:4:"tags";a:3:{i:0;s:3:"mvc";i:1;s:4:"view";i:2;s:10:"2.0.0beta3";}}i:1;a:10:{s:4:"text";s:6:"Config";s:7:"details";s:0:"";s:2:"id";i:6;s:8:"assignee";s:13:"Enrico Zimuel";s:5:"tasks";a:4:{i:0;a:3:{s:4:"text";s:35:"Remove constant interpolation (Ben)";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-07T15:15:02";}i:1;a:3:{s:4:"text";s:44:"Remove config inheritance from readers (Ben)";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-07T15:15:19";}i:2;a:3:{s:4:"text";s:16:"Testing (Enrico)";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-07T15:15:27";}i:3;a:3:{s:4:"text";s:38:"Documentation (Enrico, Matthew, Ralph)";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-07T15:15:36";}}s:8:"totTasks";i:4;s:14:"completedTasks";i:2;s:9:"rateTasks";d:50;s:8:"comments";a:1:{i:0;a:2:{s:4:"text";s:420:"Ben has indicated he can take care of the remaining development tasks (removing constant and magic constant support; removing inheritance/extension emulation support from readers). Testing and docs still need to be completed. To determine what tests need to be written, a code coverage report can be run; for docs, generate docs from the APIs using the docbook skeleton generator, and use tests to come up with examples.";s:6:"author";s:23:"Matthew Weier O'Phinney";}}s:4:"tags";a:3:{i:0;s:3:"mvc";i:1;s:6:"config";i:2;s:10:"2.0.0beta3";}}i:2;a:10:{s:4:"text";s:12:"DB: Metadata";s:7:"details";s:0:"";s:2:"id";i:7;s:8:"assignee";s:15:"Ralph Schindler";s:5:"tasks";a:4:{i:0;a:3:{s:4:"text";s:77:"Determine proper Metadata interface: flat, hierarchical or a mixture of both.";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-10T15:00:27";}i:1;a:3:{s:4:"text";s:64:"Create value objects for all specific type assets (if necessary)";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-10T15:00:48";}i:2;a:3:{s:4:"text";s:50:"Determine how to best approach metadata generation";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-10T15:01:06";}i:3;a:3:{s:4:"text";s:52:"Create INFORMATION_SCHEMA scanner metadata generator";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-10T15:01:22";}}s:8:"totTasks";i:4;s:14:"completedTasks";i:0;s:9:"rateTasks";d:0;s:8:"comments";a:0:{}s:4:"tags";a:3:{i:0;s:3:"mvc";i:1;s:2:"db";i:2;s:10:"2.0.0beta3";}}i:3;a:10:{s:4:"text";s:32:"Module: Register with DI locator";s:7:"details";s:89:"Work located @ https://github.com/EvanDotPro/zf2/tree/feature/module-locator-registration";s:2:"id";i:13;s:8:"assignee";s:10:"Evan Coury";s:5:"tasks";a:4:{i:0;a:3:{s:4:"text";s:67:"Add module listener to register module instance as type preferences";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-10T23:53:50";}i:1;a:3:{s:4:"text";s:20:"Docblocks / comments";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-10T23:53:50";}i:2;a:3:{s:4:"text";s:10:"Unit tests";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-10T23:53:50";}i:3;a:3:{s:4:"text";s:38:"Set type preference for module manager";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-11T17:45:02";}}s:8:"totTasks";i:4;s:14:"completedTasks";i:2;s:9:"rateTasks";d:50;s:8:"comments";a:0:{}s:4:"tags";a:2:{i:0;s:10:"2.0.0beta3";i:1;s:6:"module";}}}}i:4;a:2:{s:5:"phase";s:8:"Complete";s:7:"stories";a:4:{i:0;a:10:{s:4:"text";s:36:"AgileZen integration with ZF website";s:7:"details";s:0:"";s:2:"id";i:10;s:8:"assignee";s:13:"Enrico Zimuel";s:5:"tasks";a:9:{i:0;a:3:{s:4:"text";s:34:"Button "invite me to this project"";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-24T17:18:23";}i:1;a:3:{s:4:"text";s:5:"Board";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-31T13:21:39";}i:2;a:3:{s:4:"text";s:22:"stories for each phase";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-31T13:21:51";}i:3;a:3:{s:4:"text";s:16:"caching the data";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-31T13:22:05";}i:4;a:3:{s:4:"text";s:29:"Add the links to agilezen.com";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-02T17:03:24";}i:5;a:3:{s:4:"text";s:22:"create the cron script";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-02T17:03:40";}i:6;a:3:{s:4:"text";s:26:"link to the agilezen board";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-03T16:43:32";}i:7;a:3:{s:4:"text";s:34:"add the tag filter for the stories";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-06T18:16:40";}i:8;a:3:{s:4:"text";s:27:"add description for stories";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-07T15:26:27";}}s:8:"totTasks";i:9;s:14:"completedTasks";i:9;s:9:"rateTasks";d:100;s:8:"comments";a:0:{}s:4:"tags";a:1:{i:0;s:7:"website";}}i:1;a:10:{s:4:"text";s:32:"DB: Adapter & Result Abstraction";s:7:"details";s:108:"v2.0 Database abstraction layer. RFC is here:

* http://framework.zend.com/wiki/display/ZFDEV2/RFC+-+Zend+Db";s:2:"id";i:3;s:8:"assignee";s:15:"Ralph Schindler";s:5:"tasks";a:10:{i:0;a:3:{s:4:"text";s:36:"Sync (rebase) feature/db with master";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-17T14:39:23";}i:1;a:3:{s:4:"text";s:127:"Adapter: working Pdo Sqlite implementation for Adapter (Driver: Connection, Statement, Result) and ResultSet (array and object)";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-17T14:40:10";}i:2;a:3:{s:4:"text";s:194:"Adapter: working SQL Server implementation for Adapter (Driver: Connection, Statement, Result) and ResultSet (array and object) - (this may need to be merged in from feature/db-sqlserver branch)";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-17T14:40:36";}i:3;a:3:{s:4:"text";s:123:"Adapter: working Mysqli implementation for Adapter (Driver: Connection, Statement, Result) and ResultSet (array and object)";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-17T14:40:53";}i:4;a:3:{s:4:"text";s:102:"Create examples for utilizing Adapter and Result that works for any configured adapter/vendor platform";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-17T14:42:49";}i:5;a:3:{s:4:"text";s:34:"Document Adapter, Driver, Platform";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-17T14:43:05";}i:6;a:3:{s:4:"text";s:18:"Document ResultSet";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-17T14:43:17";}i:7;a:3:{s:4:"text";s:78:"Create example framework for education purposes at Zend_Db-Examples repository";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-17T14:44:25";}i:8;a:3:{s:4:"text";s:77:"Refactor Adapter towards prototype pattern for statement and result in driver";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-19T14:32:29";}i:9;a:3:{s:4:"text";s:84:"Complete the Named and Mapped parameter containers for input of statement parameters";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-19T14:33:08";}}s:8:"totTasks";i:10;s:14:"completedTasks";i:10;s:9:"rateTasks";d:100;s:8:"comments";a:1:{i:0;a:2:{s:4:"text";s:87:"Not merging until all beta3 stories for Db are complete, as merging would break master.";s:6:"author";s:23:"Matthew Weier O'Phinney";}}s:4:"tags";a:3:{i:0;s:3:"mvc";i:1;s:2:"db";i:2;s:10:"2.0.0beta3";}}i:2;a:10:{s:4:"text";s:23:"Db: Table & Row Gateway";s:7:"details";s:0:"";s:2:"id";i:8;s:8:"assignee";s:15:"Ralph Schindler";s:5:"tasks";a:4:{i:0;a:3:{s:4:"text";s:43:"Create interface for standard table gateway";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-01T15:04:11";}i:1;a:3:{s:4:"text";s:83:"Create basic object with standard insert(), update(), delete() and a basic select()";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-01T15:04:25";}i:2;a:3:{s:4:"text";s:75:"Create classes that can be statically inherited (utilizing default adapter)";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-01T15:04:27";}i:3;a:3:{s:4:"text";s:28:"Document basic functionality";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-01T15:04:39";}}s:8:"totTasks";i:4;s:14:"completedTasks";i:3;s:9:"rateTasks";d:75;s:8:"comments";a:1:{i:0;a:2:{s:4:"text";s:87:"Not merging until all beta3 stories for Db are complete, as merging would break master.";s:6:"author";s:23:"Matthew Weier O'Phinney";}}s:4:"tags";a:3:{i:0;s:3:"mvc";i:1;s:2:"db";i:2;s:10:"2.0.0beta3";}}i:3;a:10:{s:4:"text";s:29:"Db: Sql Abstraction component";s:7:"details";s:0:"";s:2:"id";i:9;s:8:"assignee";s:15:"Ralph Schindler";s:5:"tasks";a:7:{i:0;a:3:{s:4:"text";s:65:"Create basic interfaces & namespace / identify portability issues";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-01T15:01:54";}i:1;a:3:{s:4:"text";s:63:"Create basic SELECT functionality with basic WHERE capabilities";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-01T15:02:00";}i:2;a:3:{s:4:"text";s:26:"Create basic/common INSERT";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-01T15:02:06";}i:3;a:3:{s:4:"text";s:26:"Create basic/common UPDATE";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-01T15:02:12";}i:4;a:3:{s:4:"text";s:26:"Create basic/common DELETE";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-01T15:02:18";}i:5;a:3:{s:4:"text";s:38:"Create interface for predicate support";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-01T15:02:31";}i:6;a:3:{s:4:"text";s:28:"Document basic functionality";s:6:"status";s:10:"incomplete";s:10:"createTime";s:19:"2012-02-01T15:03:07";}}s:8:"totTasks";i:7;s:14:"completedTasks";i:6;s:9:"rateTasks";d:86;s:8:"comments";a:0:{}s:4:"tags";a:3:{i:0;s:3:"mvc";i:1;s:2:"db";i:2;s:10:"2.0.0beta3";}}}}i:5;a:2:{s:5:"phase";s:6:"Merged";s:7:"stories";a:2:{i:0;a:10:{s:4:"text";s:5:"Cloud";s:7:"details";s:0:"";s:2:"id";i:5;s:8:"assignee";s:13:"Enrico Zimuel";s:5:"tasks";a:1:{i:0;a:3:{s:4:"text";s:34:"Complete Rackspace storage service";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-13T16:02:45";}}s:8:"totTasks";i:1;s:14:"completedTasks";i:1;s:9:"rateTasks";d:100;s:8:"comments";a:0:{}s:4:"tags";a:9:{i:0;s:5:"cloud";i:1;s:5:"azure";i:2;s:9:"rackspace";i:3;s:6:"gogrid";i:4;s:6:"amazon";i:5;s:8:"nirvanix";i:6;s:10:"strikeiron";i:7;s:5:"queue";i:8;s:10:"2.0.0beta3";}}i:1;a:10:{s:4:"text";s:26:"AgileZen Service Component";s:7:"details";s:0:"";s:2:"id";i:11;s:8:"assignee";s:13:"Enrico Zimuel";s:5:"tasks";a:14:{i:0;a:3:{s:4:"text";s:7:"Stories";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-23T15:41:49";}i:1;a:3:{s:4:"text";s:5:"Tasks";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-23T15:42:03";}i:2;a:3:{s:4:"text";s:5:"Roles";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-23T15:42:24";}i:3;a:3:{s:4:"text";s:11:"Attachments";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-23T15:42:37";}i:4;a:3:{s:4:"text";s:8:"Comments";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-23T15:42:53";}i:5;a:3:{s:4:"text";s:7:"Invites";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-23T15:43:08";}i:6;a:3:{s:4:"text";s:2:"Me";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-23T15:43:21";}i:7;a:3:{s:4:"text";s:6:"Phases";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-23T15:44:32";}i:8;a:3:{s:4:"text";s:4:"Tags";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-23T15:44:35";}i:9;a:3:{s:4:"text";s:8:"Projects";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-23T15:44:48";}i:10;a:3:{s:4:"text";s:23:"Create proposal for ZF2";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-01-24T14:00:23";}i:11;a:3:{s:4:"text";s:23:"add the filters feature";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-06T18:17:19";}i:12;a:3:{s:4:"text";s:27:"add the enrichments feature";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-07T18:52:19";}i:13;a:3:{s:4:"text";s:26:"add the pagination feature";s:6:"status";s:8:"complete";s:10:"createTime";s:19:"2012-02-07T18:52:26";}}s:8:"totTasks";i:14;s:14:"completedTasks";i:14;s:9:"rateTasks";d:100;s:8:"comments";a:0:{}s:4:"tags";a:3:{i:0;s:7:"website";i:1;s:7:"service";i:2;s:10:"2.0.0beta3";}}}}}}