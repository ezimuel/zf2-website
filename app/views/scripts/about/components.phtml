<?= $this->partial('about/sidebar') ?>
<?= $this->partial('about/header', array('title'  => 'About',
                                         'active' => 'components')) ?>

<?= $this->dynamicHeader('subPageMainHeader', 'Zend Framework Components') ?>

<div class="dotted-line"></div>

<h3>Model-View-Controller (MVC)</h3>
<ul class="ul">
    <li>Zend_Application, Zend_Application_Bootstrap,
        Zend_Application_Module, Zend_Application_Resource</li>
    <li>Zend_Controller_Front, Zend_Controller_Action, Zend_Controller_Dispatcher,
        Zend_Controller_Plugin, Zend_Controller_Router</li>
    <li>Zend_Form</li>
    <li>Zend_Layout, Zend_View, Zend_View_Filter, Zend_View_Helper</li>
</ul>

<p>
    The above components make use of the industry standard web application design
    pattern MVC (which originated with one of the first scripting languages ever
    built, Smalltalk), and allows developers and web designers to separate their
    concerns and skills, making code implementation and design easily and clearly
    separated.  No more confusion or needing both skill sets in one person.
</p>

<h3>Tooling and Rapid Application Development (RAD)</h3>
<ul class="ul">
    <li>Zend_CodeGenerator</li>
    <li>Zend_Reflection</li>
    <li>Zend_Tool_Framework, Zend_Tool_Project</li>
</ul>

<p>
    One of the most tedious tasks in any project is the initial application
    setup. <tt>Zend_Tool</tt> provides tooling support and a command-line
    client that allows you to generate your project structure, MVC artifacts, and
    more. Start writing your application immediately, instead of manipulating your
    directory tree.
</p>

<h3>Database</h3>
<ul class="ul">
    <li>Zend_Db, Zend_Db_Adapter, Zend_Db_Profiler, Zend_Db_Select,
        Zend_Db_Table</li>
</ul>

<p>
    Again using standard database programming best practices, data adapters for all
    major databases abstract away the details, so you can build your application
    (domain of your business) models on whatever database engine you need.
</p>

<h3>Internationalization (i18n) and Localization (l10n)</h3>
<ul class="ul">
    <li>Zend_Currency</li>
    <li>Zend_Date</li>
    <li>Zend_Locale</li>
    <li>Zend_Measure</li>
    <li>Zend_Translate</li>
</ul>

<p>
    In an increasingly global economy, localizing your application for a particular
    language and culture is imperative, not an afterthought.  Do that easily,
    whenever you're ready to expand your markets, with Zend Framework's support for
    internationalization (i18n).
</p>

<h3>Authentication, Authorization, and Session management</h3>
<ul class="ul">
    <li>Zend_Acl</li>
    <li>Zend_Auth</li>
    <li>Zend_Session</li>
</ul>

<p>
    Virtually all web applications have some user-specific data that must be
    customized, and usually, protected from access by other users.  Accomplish this
    quickly and easily with the above features of Zend Framework.
</p>

<h3>Web and Web Services</h3>
<ul class="ul">
    <li>Consuming services: Zend_Feed, Zend_Gdata, Zend_Http_Client, Zend_Rest_Client, Zend_Service, Zend_XmlRpc_Client</li>
    <li>Exposing services: Zend_Amf_Server, Zend_Json_Server, Zend_Server_Definition, Zend_Server_Reflection, Zend_Rest_Server, Zend_Soap_Server, Zend_XmlRpc_Server</li>
</ul>

<p>
    Web services are an integral part of Zend Framework and we intend for Zend
    Framework to be the nexus for and entire eco-system of Web Services and APIs
    providers.  We currently have partnered with Google, Microsoft, and StrikeIron
    and they have built support for their services into Zend Framework.  More are
    coming soon.
</p>

<h3>Mail, Formats, and Search</h3>
<ul class="ul">
    <li>Zend_Json</li>
    <li>Zend_Mail, Zend_Mime</li>
    <li>Zend_Pdf</li>
    <li>Zend_Search_Lucene</li>
</ul>

<p>
    Web 2.0 applications require support for Ajax, PDF generation, e-mail
    communication, and search, all an increasingly important part of web
    applications today.  Zend Framework simplifies a developers life and gives you
    built-in support for these essential, if not critical, features for your
    application.
</p>

<h3>Core Infrastructure</h3>
<ul class="ul">
    <li>Zend_Cache, Zend_Config, Zend_Console_Getopt, Zend_Debug,
        Zend_Filter, Zend_Loader, Zend_Loader_Autoloader, Zend_Log,
        Zend_Memory Zend_Registry,  Zend_Validate, Zend_Version</li>
</ul>

<p>
    Zend Framework is a broad library of loosely-coupled, yet highly cohesive
    pieces that support many of the other features you might need for a web
    application.  From logging for tracking and debugging your application in
    production, caching for high performance, filtering for more secure and safe
    applications, to all the other little pieces that make a web application
    developer's life easy, Zend Framework provides all this, plus a vast community,
    a company standing behind and sponsoring development, and a large number of
    talented developers who know how to build Zend Framework applications from the
    ground up.
</p>
<!--    Documentation
          o Improved correctness, readability, and more examples
          o Additional coverage by translation teams
          o Web application development tutorial
-->

