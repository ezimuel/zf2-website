<h2>ZF2010-04: Potential MIME-type Injection in Zend_File_Transfer</h2>

<h3>Executive Summary</h3>

<p>
    <code>Zend_File_Transfer</code> had a potential MIME type injection 
    vulnerability for file uploads. In certain situations where either PHP's 
    <code>ext/finfo</code> extension is not installed and the 
    <code>mime_content_type()</code> function was not available on a system, 
    <code>Zend_File_Transfer</code> would use the user provided value for the 
    type embedded inside the <code>$_FILES</code> superglobal.  Additionally, 
    in cases where the functionality was available, but where a type could not 
    be determined by one of them, <code>Zend_File_Transfer</code> would also 
    fallback on the user provided type.  Using user provided information for a 
    file's MIME type in uploads is considered an insecure practice, as it 
    provides attack vectors by malicious users.
</p>

<h3>Action Taken</h3>

<p>
    This vulnerability has been fixed by returning "application/octet" in 
    situations where the MIME type cannot be detected securely by PHP.
</p>

<h3>Recommendations</h3>

<p>
    If you use this component, or other components that rely on it (e.g., 
    <code>Zend_Form_Element_File</code>), we strongly recommend upgrading to 
    the most current version of Zend Framework available, or one of the 
    following versions.
</p>

<ul class="ul">
    <li>1.9.7</li>
    <li>1.8.5</li>
</ul>

<h2>Other Information</h2>
<h3>Acknowledgments</h3>

<p>
    The Zend Framework team thanks the following for working with us to help 
    protect its users:
</p>

<ul class="ul">
    <li>PÃ¡draic Brady, who made the initial report and who worked with our 
    team to ensure that the appropriate actions were taken</li>
    <li>Thomas Weidner, who provided the patch used to resolve the issue
    issue tracker</li>
</ul>

<?php echo $this->partial('security/policy');
